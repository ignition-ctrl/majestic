#!/usr/bin/env bash
#
# Arquivo: videocut-gui.sh
# Descrição: Script usando o YAD e ffmpeg para cortar arquivos de vídeo.
#
# Feito por Lucas Saliés Brum, a.k.a. sistematico <lucas@archlinux.com.br>
#
# Criado em:        09/06/2018 19:39:27
# Última alteração: 28/01/2019 19:41:58

# ~/.config/Thunar/uca.xml
#<action>
#	<icon>camera-video</icon>
#	<name>VideoCut</name>
#	<unique-id>1528543845224954-1</unique-id>
#	<command>videocut-gui.sh %F</command>
#	<description></description>
#	<patterns>*</patterns>
#	<video-files/>
#</action>

#NAUTILUS_SCRIPT_SELECTED_FILE_PATHS
#NAUTILUS_SCRIPT_SELECTED_URIS
#NAUTILUS_SCRIPT_CURRENT_URI
#NAUTILUS_SCRIPT_WINDOW_GEOMETRY

if [ -z "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" ] || [ ! -f $NAUTILUS_SCRIPT_SELECTED_FILE_PATHS ]; then
    yad --info --title "$titulo" --text "Você precisa especificar um vídeo. $NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" --button=gtk-ok:1
    exit 1
else
    video="${NAUTILUS_SCRIPT_SELECTED_FILE_PATHS}"
fi

titulo="Video Cut"

command -v yad 1> /dev/null 2> /dev/null
if [ $? = 1 ]; then
	echo "yad não instalado."
	exit
fi

display () # Calculate/collect progress bar info. & pipe to Zenity.
{
START=$(date +%s); FR_CNT=0; ETA=0; ELAPSED=0
while [ -e /proc/$PID ]; do                         # Is FFmpeg running?
    sleep 2
    VSTATS=$(awk '{gsub(/frame=/, "")}/./{line=$1-1} END{print line}' \
    "$RM"/vstats*)                                  # Parse vstats file.
    if [[ $VSTATS -gt $FR_CNT ]]; then                # Parsed sane or no?
        FR_CNT=$VSTATS
        PERCENTAGE=$(( 100 * FR_CNT / TOT_FR ))     # Progbar calc.
        ELAPSED=$(( $(date +%s) - START )); echo $ELAPSED > /tmp/elapsed.value
        ETA=$(date -d @$(awk 'BEGIN{print int(('$ELAPSED' / '$FR_CNT') *\
        ('$TOT_FR' - '$FR_CNT'))}') -u +%H:%M:%S)   # ETA calc.
    fi
    echo "# Working on file: $COUNT of $OF - Length: $DUR - Frames: $TOT_FR\
    \nFilename: ${NFILE%.*}\nSaved to: $SAVEAS\
    \nTelevision standard is set to: $TFORM2\
    \nRe-coding with FFmpeg, method: $QUAL\
    \nFrame: $FR_CNT of $TOT_FR   Elapsed: $(date -d @$ELAPSED -u\
    +%H:%M:%S)   ET to finish: $ETA"                # Text for stats. output.
    echo $PERCENTAGE                                # Feed the progbar.
done | yad\
    --progress\
    --window-icon $ICON\
    --title="AVI-2-MPG ${QUAL:10:13}"\
    --text="Initializing please wait..."\
    --percentage=0\
    --auto-close\
    --auto-kill
}

nome() {
    fl=$(basename -- "$1")
    ext="${fl##*.}"
    echo "${fl%.*}.$2.$$.${ext}"
}

function show_time () {
    num=$(LC_ALL=C; echo $(printf '%.*f\n' 0 "$1"))
    min=0
    hour=0
    day=0
    if ((num>59)); then
        ((sec=num%60))
        ((num=num/60))
        if((num>59));then
            ((min=num%60))
            ((num=num/60))
            if((num>23));then
                ((hour=num%24))
                ((day=num/24))
            else
                ((hour=num))
            fi
        else
            ((min=num))
        fi
    else
        ((sec=num))
    fi

	[[ ${#hour} -lt 2 ]] && hour="0$hour"
	[[ ${#min} -lt 2 ]] && min="0$min"
	[[ ${#sec} -lt 2 ]] && sec="0$sec"

    echo "${hour}:${min}:${sec}"
}

novo=$(dirname "${video}")/$(nome "$video" "cut")
t=$(ffprobe -i "$video" -show_entries format=duration -v quiet -of csv="p=0")
total="$(show_time $t)"
nome=$(nome "$video" "novo")

eval $(yad --title "$titulo" --width=400 --form --field="Arquivo\::SFL" --field="Início:" --field="Fim:" --field="Saída:" "$1" "00:00:00" "$total" "$novo" | awk -F'|' '{printf "entrada=\"%s\"\ninicio=%s\nfim=%s\nsaida=\"%s\"\n", $1, $2, $3, $4}')
[[ -z $entrada || -z $inicio || -z $fim || -z $saida ]] && exit 1

diff=$(($(date +%s --date="$fim")-$(date +%s --date="$inicio")))
offset="$(show_time $diff)"

ffmpeg -ss "$inicio" -t "$offset" -i "$entrada" "$saida" && status=$? &
PID=$! && display 

 # | yad --title "$titulo" --progress --pulsate --auto-close --progress-text "Convertendo..."

if [[ $status -eq 0 ]]; then
    yad --info --title "$titulo" --text "Video: $(basename ${saida}) cortado com sucesso." --button=gtk-ok:1
else
    yad --error --title "$titulo" --text "Falha no corte de: $(basename ${saida})." --button=gtk-ok:1
fi


