#!/usr/bin/env bash
#
# Arquivo: ~/.local/bin/screenshot
#
# Script para criar screencasts(vídeos da captura de tela) usando o ffmpeg.
#
# Desenvolvido por Lucas Saliés Brum <lucas@archlinux.com.br>
#
# Criado em: 09/06/2017 23:26:41
# Última Atualização: 31/10/2018 12:35:15

preset="veryfast" # ultrafast,superfast,veryfast,faster,fast,medium,slow,slower,veryslow,placebo
ext="mp4"
apps=("ffmpeg" "xrandr" "pacmd")
lixeira="${HOME}/.local/share/Trash"
icone="${HOME}/.local/share/icons/elementary/video-display.png"
resolucao=$(xrandr | grep '*' | awk 'NR==1{print $1}')
audio=$(pacmd list-sinks | grep -A 1 'index: 0' | awk 'NR==2{print $2}' | awk '{print substr($0,2,length($0)-2)}') # list-sources, list-sinks

for app in ${apps[@]}
do
    command -v $app >/dev/null 2>&1 || { echo >&2 "O aplicativo $app não está instalado. Abortando."; exit 1; }
done

[ -f ${HOME}/.config/polybar/config ] && cor=$(awk -F# '/secondary/{print $2;exit}' ${HOME}/.config/polybar/config) || cor="bf616a"

if [ -f ~/.config/user-dirs.dirs ]; then
    source ~/.config/user-dirs.dirs
    caminho="${XDG_VIDEOS_DIR}/screencast"
else
    caminho="${HOME}/video/screencast"
fi

if [ ! $1 ]; then
    #data=$(date +%Y-%m-%d_%H-%M-%S)
    data=$(date +%H-%M-%S)
	caminho="${caminho}/$(date +%Y)/$(date +%m)/$(date +%d)"
    arquivo="${caminho}/screencast-${data}"
    [ ! -d $caminho ] && mkdir -p $caminho
fi

if pgrep -x "ffmpeg" > /dev/null
then
    [ "$(pgrep -x polybar)" ] && [ "$1" == "status" ] && echo "%{F#${cor}}%{F-}" && exit
    if [ ! $1 ]; then
		if [ -f /tmp/screencast.pid ] && [ -f /tmp/screencast.file ]; then
        	kill -9 $(cat /tmp/screencast.pid) && sleep 1 && kill -9 $(cat /tmp/screencast.pid) && sleep 1
        	notify-send -i $icone "ScreenCast" "Terminado, recodificando..."
			ffmpeg -ss 2 -i $(cat /tmp/screencast.file).tmp.${ext} -vcodec copy -acodec copy $(cat /tmp/screencast.file).${ext} > /dev/null 2>&1 < /dev/null
			#ffmpeg -ss 2 -i $(cat /tmp/screencast.file).tmp.${ext} -vcodec copy -acodec copy $(cat /tmp/screencast.file).${ext}
		else
			notify-send -i $icone "ScreenCast" "Arquivo de pid e/ou filepath não encontrado, abortando..."
			killall ffmpeg
		fi
        exit 0
    fi
else
    [ "$(pgrep -x polybar)" ] && [ "$1" == "status" ] && echo "%{F#${cor}}%{F-}" && exit
    if [ ! "$1" ]; then
        echo "${arquivo}" > /tmp/screencast.file
		notify-send -i $icone "ScreenCast" "Iniciado"
        ffmpeg -async 1 -f x11grab -s $resolucao -i :0 -f pulse -ac 2 -i default -c:v libx264 -crf 23 -profile:v baseline -level 3.0 -pix_fmt yuv420p -c:a aac -ac 2 -strict experimental -b:a 128k -movflags faststart ${arquivo}.tmp.${ext} && echo $! > /tmp/screencast.pid
    elif [ "$1" == "clear" ]; then
        icone="${HOME}/.local/share/icons/elementary/user-trash.png"
        if ls ${caminho}* 2> /dev/null; then
            mv ${caminho}* ${lixeira}/files/
            export DISPLAY=:0 ; canberra-gtk-play -i trash-empty 2>&1
            dbus-launch notify-send -i $icone "ScreenCast" "Pasta de screencasts limpa!"
        else
            export DISPLAY=:0 ; canberra-gtk-play -i trash-empty 2>&1
            dbus-launch notify-send -i $icone "ScreenCast" "Pasta de screencasts já está limpa!"
        fi
        exit 0
    fi
fi

exit 0
